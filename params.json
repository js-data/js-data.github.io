{"name":"js-data.io","tagline":"js-data","body":"<img src=\"https://raw.githubusercontent.com/js-data/js-data/master/js-data.png\" alt=\"js-data logo\" title=\"js-data\" align=\"right\" width=\"64\" height=\"64\" />\r\n\r\n## JSData [![bower version](https://img.shields.io/bower/v/js-data.svg?style=flat-square)](https://www.npmjs.org/package/js-data) [![npm version](https://img.shields.io/npm/v/js-data.svg?style=flat-square)](https://www.npmjs.org/package/js-data) [![Circle CI](https://img.shields.io/circleci/project/js-data/js-data/master.svg?style=flat-square)](https://circleci.com/gh/js-data/js-data/tree/master) [![npm downloads](https://img.shields.io/npm/dm/js-data.svg?style=flat-square)](https://www.npmjs.org/package/js-data) [![License](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://github.com/js-data/js-data/blob/master/LICENSE)\r\n\r\nInspired by [Ember Data](https://github.com/emberjs/data), js-data is the model layer you've been craving. It consists of a convenient framework-agnostic, in-memory cache for managing your data, which uses adapters to communicate with various persistence layers.\r\n\r\nYou can use the [http adapter](http://www.js-data.io/docs/dshttpadapter), which is perfect for communicating with your RESTful backend. You could also use the [localStorage adapter](http://www.js-data.io/docs/dslocalstorageadapter). On the server you could hook up to the [SQL adapter (Postgres/MySQL/MariaDB/SQLite3)](http://www.js-data.io/docs/dssqladapter) and add in the [Redis adapter](http://www.js-data.io/docs/dsredisadapter) as a caching layer for your read endpoints. More adapters are coming, and you're free to implement your own. View [available adapters](http://www.js-data.io/docs/working-with-adapters).\r\n\r\nUnlike Backbone and Ember Models, JSData does not require the use of getters and setters, and doesn't wrap your data with custom classes if you don't want it to. JSData's internal dirty-checking (via [observe-js](https://github.com/Polymer/observe-js) or `Object.observe` in supporting browsers) allows for powerful use cases and an easy avenue for implementing your own [3-way data-binding](https://www.firebase.com/blog/2013-10-04-firebase-angular-data-binding.html).\r\n\r\nSupporting relations, computed properties, model lifecycle control and a slew of other features, JSData is the tool for giving your data the respect it deserves.\r\n\r\n__Latest Release:__ [![Latest Release](https://img.shields.io/github/release/js-data/js-data.svg?style=flat-square)](https://github.com/js-data/js-data/releases)\r\n\r\n__Status:__\r\n\r\n[![Dependency Status](https://img.shields.io/gemnasium/js-data/js-data.svg?style=flat-square)](https://gemnasium.com/js-data/js-data) [![Coverage Status](https://img.shields.io/coveralls/js-data/js-data/master.svg?style=flat-square)](https://coveralls.io/r/js-data/js-data?branch=master) [![Codacity](https://img.shields.io/codacy/88b55f71c45a47838d24ed1e5fd2476c.svg?style=flat-square)](https://www.codacy.com/public/jasondobry/js-data/dashboard) \r\n\r\n__Supported Platforms:__\r\n\r\n[![node version](https://img.shields.io/badge/Node-0.10%2B-green.svg?style=flat-square)](https://github.com/js-data/js-data) [![browsers](https://img.shields.io/badge/Browser-Chrome%2CFirefox%2CSafari%2COpera%2CIE%209%2B%2CiOS%20Safari%207.1%2B%2CAndroid%20Browser%202.3%2B-green.svg?style=flat-square)](https://github.com/js-data/js-data)\r\n\r\n### Quick Start\r\n`bower install --save js-data js-data-http` or `npm install --save js-data js-data-http`.\r\n\r\nLoad `js-data-http.js` after `js-data.js`.\r\n\r\n```js\r\nvar store = new JSData.DS();\r\n\r\n// register and use http by default for async operations\r\nstore.registerAdapter('http', new DSHttpAdapter(), { default: true });\r\n\r\n// simplest model definition\r\nvar User = store.defineResource('user');\r\nvar Comment = store.defineResource('comment');\r\n\r\nvar user;\r\n\r\n// Example CRUD operations with default configuration\r\n// See http://www.js-data.io/docs/dsfind\r\nUser.find(1)\r\n  .then(function (_user) {\r\n    _user; // { id: 1, name: 'John' }\r\n\r\n    // See http://www.js-data.io/docs/dsis\r\n    User.is(_user); // true\r\n    Comment.is(_user); // false\r\n\r\n    // The user is in the store now\r\n    // See http://www.js-data.io/docs/dsget\r\n    User.get(_user.id); // { id: 1, name: 'John' }\r\n\r\n    user = _user;\r\n\r\n    // No need for another GET request, will resolve immediately\r\n    // See http://www.js-data.io/docs/dsfind\r\n    return User.find(1);\r\n  })\r\n  .then(function (_user) {\r\n    user === _user; // true\r\n\r\n    // PUT /user/1 {name:\"Johnny\"}\r\n    // See http://www.js-data.io/docs/dsupdate\r\n    return User.update(user.id, { name: 'Johnny' });\r\n  })\r\n  .then(function (_user) {\r\n    // identity mapping at play\r\n    user === _user; // true\r\n    user === User.get(_user.id); // true\r\n\r\n    user; // { id: 1, name: 'Johnny' }\r\n\r\n    user.name = 'Billy';\r\n\r\n    // PUT /user/1 {id:1,name:\"Billy\"}\r\n    // See http://www.js-data.io/docs/dssave\r\n    return User.save(1);\r\n  })\r\n  .then(function (_user) {\r\n    // identity mapping at play\r\n    user === _user; // true\r\n    user === User.get(_user.id); // true\r\n\r\n    user; // { id: 1, name: 'Johnny' }\r\n\r\n    // DELETE /user/1\r\n    // See http://www.js-data.io/docs/dsdestroy\r\n    return User.destroy(1);\r\n  })\r\n  .then(function () {\r\n    // The user has also been removed from the in-memory store\r\n    User.get(1); // undefined\r\n  });\r\n```\r\n\r\nAll your data are belong to you...\r\n\r\n### Guides\r\n- [Getting Started with js-data](http://www.js-data.io/docs/home)\r\n- [Resources/Models](http://www.js-data.io/docs/resources)\r\n- [Working with the Data Store](http://www.js-data.io/docs/working-with-the-data-store)\r\n- [Adapters](http://www.js-data.io/docs/working-with-adapters)\r\n- [Model Lifecycle](http://www.js-data.io/docs/model-lifecycle)\r\n- [Custom Instance Behavior](http://www.js-data.io/docs/custom-instance-behavior)\r\n- [Computed Properties](http://www.js-data.io/docs/computed-properties)\r\n- [Relations](http://www.js-data.io/docs/relations)\r\n- [Schemata & Validation](http://www.js-data.io/docs/schemata--validation)\r\n- [JSData on the server](http://www.js-data.io/docs/jsdata-on-the-server)\r\n- [Angular + JSData](http://www.js-data.io/docs/js-data-angular)\r\n- [FAQ](http://www.js-data.io/docs/faq)\r\n\r\nSee an issue with or have a suggestion for the documentation? You can suggest edits right on the documentation pages! (There's a link at the top right of each page.)\r\n\r\n### API Documentation\r\n- [DS](http://www.js-data.io/docs/ds)\r\n- [js-data-schema](http://www.js-data.io/docs/js-data-schema)\r\n- [DSFirebaseAdapter](http://www.js-data.io/docs/dsfirebaseadapter)\r\n- [DSHttpAdapter](http://www.js-data.io/docs/dshttpadapter)\r\n- [DSLocalForageAdapter](http://www.js-data.io/docs/dslocalforageadapter)\r\n- [DSLocalStorageAdapter](http://www.js-data.io/docs/dslocalstorageadapter)\r\n- [DSMongoDBAdapter](http://www.js-data.io/docs/dsmongodbadapter)\r\n- [DSRedisAdapter](http://www.js-data.io/docs/dsredisadapter)\r\n- [DSRethinkDBAdapter](http://www.js-data.io/docs/dsrethinkdbadapter)\r\n- [DSSqlAdapter](http://www.js-data.io/docs/dssqladapter)\r\n\r\n### Changelog\r\n[CHANGELOG.md](https://github.com/js-data/js-data/blob/master/CHANGELOG.md)\r\n\r\n### Community\r\n- [Mailing List](https://groups.io/org/groupsio/jsdata) - Ask your questions!\r\n- [Issues](https://github.com/js-data/js-data/issues) - Found a bug? Feature request? Submit an issue!\r\n- [GitHub](https://github.com/js-data/js-data) - View the source code for JSData.\r\n- [Contributing Guide](https://github.com/js-data/js-data/blob/master/CONTRIBUTING.md)\r\n\r\n### Contributing\r\n\r\nFirst, feel free to contact me with questions. [Mailing List](https://groups.io/org/groupsio/jsdata).\r\n\r\n1. Contribute to the issue that is the reason you'll be developing in the first place\r\n1. Fork js-data\r\n1. `git clone https://github.com/<you>/js-data.git`\r\n1. `cd js-data; npm install; bower install;`\r\n1. `grunt go` (builds and starts a watch)\r\n1. (in another terminal) `grunt karma:dev` (runs the Karma tests)\r\n1. (in another terminal) `grunt w` (runs the NodeJS tests)\r\n1. Write your code, including relevant documentation and tests\r\n1. Submit a PR and we'll review\r\n\r\n### License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014-2015 Jason Dobry\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}